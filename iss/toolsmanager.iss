; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ToolsManager"
#define MyAppVersion "1.0"
#define MyAppPublisher "Spark Impulsos"
#define MyAppURL "www.sparkjf.com"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{C33F0D04-9065-4489-AB21-1203A7FD4370}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputDir=C:\Users\leonardo.belini\Documents\Projetos\Tools Manager\exe
OutputBaseFilename=ToolsManager
Compression=lzma
SolidCompression=yes

[Languages]
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"

[Files]
; Add the ISSkin DLL used for skinning Inno Setup installations.
Source: "C:\Program Files (x86)\Codejock Software\ISSkin\ISSkinU.dll"; DestDir: "{tmp}"; Flags: dontcopy

; Add the Visual Style resource containing the resources used for skinning,
; you can also use Microsoft Visual Styles (*.msstyles) resources.
Source: "C:\Program Files (x86)\Inno Script Studio\Styles\Chromium.cjstyles"; DestDir: "{tmp}"; Flags: dontcopy

Source: "..\Scripts\install_task.bat"; DestDir: "{userappdata}\Processa\ToolsManager"; Flags: ignoreversion
Source: "..\Scripts\ver_rem_toolkit.bat"; DestDir: "{userappdata}\Processa\ToolsManager"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
               
[Dirs]
Name: "{userappdata}\Processa\ToolsManager\log"

[Run]
Filename: "{userappdata}\Processa\ToolsManager\install_task.bat"; WorkingDir: "{userappdata}\Processa\ToolsManager"; Flags: shellexec runhidden; Description: "Criando agenda"; StatusMsg: "Agendando Tarefa"

[Code]
// Importing LoadSkin API from ISSkinU.dll
procedure LoadSkin(lpszPath: String; lpszIniFileName: String);
external 'LoadSkin@files:ISSkinU.dll stdcall';

// Importing UnloadSkin API from ISSkinU.dll
procedure UnloadSkin();
external 'UnloadSkin@files:ISSkinU.dll stdcall';

// Importing ShowWindow Windows API from User32.DLL
function ShowWindow(hWnd: Integer; uType: Integer): Integer;
external 'ShowWindow@user32.dll stdcall';

function InitializeSetup(): Boolean;
begin
  ExtractTemporaryFile('Chromium.cjstyles');
  LoadSkin(ExpandConstant('{tmp}\Chromium.cjstyles'), 'normalmystyle.ini');
  Result := True;
end;

procedure DeinitializeSetup();
begin
  // Hide Window before unloading skin so user does not get
  // a glimpse of an unskinned window before it is closed.
  ShowWindow(StrToInt(ExpandConstant('{wizardhwnd}')), 0);
  UnloadSkin();
end;
